  
<!-- 
    Credit goes to the Ruby on Rails team for this page 
    has been heavily based on the default Rails page that is 
    built with a scaffolded application.

    Thanks a lot to them for their work.

    See Ruby on Rails if you want a kickass framework in Ruby:
    http://www.rubyonrails.org/
-->

<div id="page">
      <div id="sidebar">
        <ul id="sidebar-items">
          <li>
            <h3>Join the community</h3>
            <ul class="links">

              <li><a href="http://perldancer.org/">PerlDancer</a></li>
              <li><a href="http://twitter.com/PerlDancer/">Official Twitter</a></li>
              <li><a href="http://github.com/sukria/Dancer/">GitHub Community</a></li>
            </ul>
          </li>

          <li>
            <h3>Browse the documentation</h3>

            <ul class="links">
              <li><a
              href="http://search.cpan.org/dist/Dancer/lib/Dancer/Introduction.pod">Introduction</a></li>
              <li><a href="http://search.cpan.org/dist/Dancer/lib/Dancer/Cookbook.pod">Cookbook</a></li>
              <li><a href="http://search.cpan.org/dist/Dancer/lib/Dancer/Deployment.pod">Deployment Guide</a></li>
              <li><a
              href="http://search.cpan.org/dist/Dancer/lib/Dancer/Tutorial.pod"
              title="a tutorial to build a small blog engine with Dancer">Tutorial</a></li>
            </ul>
          </li>

          <li>
            <h3>Your application's environment</h3>

            <ul>
                <li>Location: <code>/Users/ynonperek/Courses/perl/events/pm_nov_12/chatterbox</code></li>
                <li>Template engine: <code><% settings.template %></code></li>
                <li>Logger: <code><% settings.logger %></code></li>
                <li>Environment: <code><% settings.environment %></code></li>
            </ul>

          </li>
        </ul>

      </div>

      <div id="content">
        <div id="header">
          <h1>Perl is dancing</h1>
          <h2>You&rsquo;ve joined the dance floor!</h2>
        </div>

        <div id="main">
            <form action='/' method=POST>
                <label for=inp-txt>Write on wall:</label>
                <input type=text id=inp-txt class='wide' />
                <input type=submit value=Submit />
            </form>

            <h2>The Wall</h2>
            <ul id='wall'>
            </ul>
        </div>
      </div>
    </div>

    <script src="/socket.io/socket.io.js"></script>
    <script>

        var socket = io.connect();
        var $wall  = $('#wall');

        var write = function(msg) {
            $wall.append('<li>' + msg + '</li>');
        };

        socket.on('message', function(m) {
            write( m.text );
        });

        socket.on('connect', function() {
            console.log('connected');
            socket.send('hello');
        });

        socket.on('error', function(e) {
            console.log('--- ERROR ---');
            console.log(e);
        });

        $('form').bind('submit', function(e) {
            e.preventDefault();

            socket.send($('#inp-txt').val());
            $('#inp-txt').val('');
        });

    </script>
